---
- name: Verificar o status do Replica Set do MongoDB
  hosts: mongo  # Ou qualquer grupo que contenha os nós do cluster MongoDB
  tasks:
    - name: Obter informações sobre o Replica Set (rs.isMaster)
      command: mongo --eval "rs.isMaster()"  # Caminho absoluto para o comando mongo
      register: replica_status
      ignore_errors: true  # Ignorar erro caso a execução falhe

    - name: Exibir a saída do rs.isMaster()
      debug:
        var: replica_status.stdout

    - name: Extrair a parte JSON da saída
      set_fact:
        replica_json_string: "{{ replica_status.stdout | regex_search('{.*}', '\\0') }}"
      when: replica_status.stdout != ""

    - name: Verificar se a parte JSON foi extraída corretamente
      debug:
        var: replica_json_string

    - name: Converter a parte JSON da saída para JSON
      set_fact:
        replica_status_json: "{{ replica_json_string | from_json }}"
      when: replica_json_string != ""

    - name: Extrair o IP do primário do Replica Set
      set_fact:
        primary_host: "{{ replica_status_json.primary }}"
      when: replica_status_json is defined

    - name: Exibir o IP do primário
      debug:
        var: primary_host

    - name: Verificar o status do Replica Set no primário
      command: mongo --eval "rs.status()"
      delegate_to: "{{ primary_host }}"
      when: primary_host is defined
